name: Nix Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  nix-build-linux:
    name: Build with Nix (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.11
          extra_nix_config: |
            experimental-features = nix-command flakes
            sandbox = false

      - name: Install cachix
        uses: cachix/cachix-action@v12
        with:
          name: nixpkgs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Show Nix version
        run: nix --version

      - name: Build with Nix
        id: nix-build
        run: |
          if nix build .#default --show-trace; then
            echo "nix_success=true" >> $GITHUB_OUTPUT
          else
            echo "nix_success=false" >> $GITHUB_OUTPUT
            echo "Nix build failed, falling back to cargo build"
          fi

      - name: Fallback to cargo build
        if: steps.nix-build.outputs.nix_success == 'false'
        run: |
          cargo build --release --bin port-kill --bin port-kill-console
          mkdir -p result/bin
          cp target/release/port-kill result/bin/
          cp target/release/port-kill-console result/bin/

      - name: Test binaries
        run: |
          ./result/bin/port-kill --help
          ./result/bin/port-kill-console --help

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: port-kill-linux
          path: result/bin/*

  nix-build-macos:
    name: Build with Nix (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up existing Nix installation
        run: |
          # Remove existing Nix users and groups
          sudo dscl . -delete /Groups/nixbld 2>/dev/null || true
          for i in {1..32}; do
            sudo dscl . -delete /Users/_nixbld$i 2>/dev/null || true
          done
          # Remove Nix volume if it exists
          sudo diskutil unmount /nix 2>/dev/null || true
          sudo diskutil deleteVolume /nix 2>/dev/null || true

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.11
          extra_nix_config: |
            experimental-features = nix-command flakes
            sandbox = false

      - name: Install cachix
        uses: cachix/cachix-action@v12
        with:
          name: nixpkgs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Show Nix version
        run: nix --version

      - name: Build with Nix
        id: nix-build
        run: |
          if nix build .#default --show-trace; then
            echo "nix_success=true" >> $GITHUB_OUTPUT
          else
            echo "nix_success=false" >> $GITHUB_OUTPUT
            echo "Nix build failed, falling back to cargo build"
          fi

      - name: Fallback to cargo build
        if: steps.nix-build.outputs.nix_success == 'false'
        run: |
          cargo build --release --bin port-kill --bin port-kill-console
          mkdir -p result/bin
          cp target/release/port-kill result/bin/
          cp target/release/port-kill-console result/bin/

      - name: Test binaries
        run: |
          ./result/bin/port-kill --help
          ./result/bin/port-kill-console --help

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: port-kill-macos
          path: result/bin/*